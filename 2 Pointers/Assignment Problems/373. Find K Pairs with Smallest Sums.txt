class Solution {
    class Pair implements Comparable<Pair>{
        int a;
        int b;
        int sum;
        int idx;
        Pair(int a,int b,int sum,int idx){
            this.a = a;
            this.b = b;
            this.sum = sum;
            this.idx = idx;
        }
        public int compareTo(Pair o){
            return this.sum - o.sum;
        }
    }
    public List<List<Integer>> kSmallestPairs(int[] nums1, int[] nums2, int k) {
        List<List<Integer>> result = new ArrayList<>();
        
        PriorityQueue<Pair> pq = new PriorityQueue<>();
        
        for(int i=0;i<nums1.length;i++){
            pq.add(new Pair(nums1[i] , nums2[0] , nums1[i]+nums2[0] , 0));
        }
                
        while(k > 0 && pq.size() > 0){
            Pair rem = pq.remove();
            List<Integer> list = new ArrayList<>();
            list.add(rem.a);
            list.add(rem.b);
            result.add(list);
            
            int index = rem.idx;
            if(index < nums2.length-1){
                pq.add(new Pair(rem.a , nums2[index+1] , rem.a+nums2[index+1] , index+1));
            }
            
            k--;
        }
        
        return result;
    }
}
