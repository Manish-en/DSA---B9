class Solution {
    public int maxPoints(int[][] points) {
        int n = points.length;
        if(n <= 2){
            return n;
        }
        
        int max = 2;
        
        HashMap<Double,Integer> map = new HashMap<>();      // count pairs of points having same slopes
        
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                Double m = null;
                
                if(points[i][1] == points[j][1]){
                    m = 0.0;
                }else if(points[i][0] != points[j][0]){
                    m = (points[i][1] - points[j][1])*1.0 / (points[i][0] - points[j][0]);
                }
                
                map.put(m,map.getOrDefault(m,1)+1);
            }
            
            for(int val : map.values()){
                max = Math.max(max,val);
            }
            map = new HashMap<>();
        }
        
        
        
        return max;
    }
}