class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int max = 0;
        int sum = 0;
        
        for(int weight : weights){
            max = Math.max(max,weight);
            sum += weight;
        }
        if(days == weights.length){
            return max;
        }
        
        int ans = 0;
        int low = max;
        int high = sum;
        
        while(low <= high){
            int mid = low + (high - low)/2;
            
            if(isPossible(weights,mid,days) == true){
                ans = mid;
                high = mid-1;
            }else{
                low = mid+1;
            }
        }
        
        return ans;
    }
    
    boolean isPossible(int[]weights,int mid, int days){
        int placed = 1;
        int sum = 0;
        
        for(int i=0;i<weights.length;i++){
            sum += weights[i];
            
            if(sum > mid){
                placed++;
                sum = weights[i];
            }
        }
        return placed <= days;
    }
}














