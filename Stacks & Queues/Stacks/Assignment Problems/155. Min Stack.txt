class MinStack {

    Stack<Long> data;
    Long min;
    
    public MinStack() {
        data = new Stack<>();
        min = Long.MAX_VALUE;
    }
    
    public void push(int value) {
        Long val = Long.valueOf(value);
        if(data.size() == 0){
            data.push(val);
            min = val;
        }else if(val >= min){
            data.push(val);
        }else{
            long eval = 2*val - min;
            data.push(eval);
            min = val;
        }
    }
    
    public void pop() {
        if(data.peek() >= min){
            data.pop();
        }else{
            Long rval = min;
            Long eval = data.pop();
            min = 2*min - eval;
        }
    }
    
    public int top() {
        if(data.peek() >= min){
            return data.peek().intValue();
        }else{
            return min.intValue();
        }
    }
    
    public int getMin() {
        return min.intValue();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */