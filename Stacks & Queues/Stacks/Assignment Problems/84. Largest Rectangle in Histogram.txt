class Solution {
    public int largestRectangleArea(int[] heights) {
        int n = heights.length;
        
        int []lb = new int[n];
        Stack<Integer> st = new Stack<>();
        st.push(0);
        lb[0] = -1;
        
        for(int i=1;i<n;i++){
            while(!st.empty() && heights[st.peek()] >= heights[i]){
                st.pop();
            }
            if(st.size() == 0){
                lb[i] = -1;
            }else{
                lb[i] = st.peek();
            }
            st.push(i);
        }
        
        int[]rb = new int[n];
        st = new Stack<>();
        st.push(n - 1);
        rb[n-1] = n;
        for(int i=n-2;i>=0;i--){
            while(!st.empty() && heights[st.peek()] >= heights[i]){
                st.pop();
            }
            
            if(st.size() == 0){
                rb[i] = n;
            }else{
                rb[i] = st.peek();
            }
            
            st.push(i);
        }
        
        int max = Integer.MIN_VALUE;
        for(int i=0;i<n;i++){
            int ht = heights[i];
            int width = rb[i] - lb[i] - 1;
            int area = ht * width;
            max = Math.max(max,area);
        }
        
        return max;
    
    }
}